<?xml version="1.0" encoding="utf-8"?>

<!-- data/Docs/keyboard/map.pdf -->
<PropertyList>

	<mice n="0">
		<mouse n="0">
			<mode n="0">
				<button n="3">
					<binding n="0">
						<script></script>
					</binding>
					<binding n="1">
						<condition>
							<and>
								<property>/devices/status/mice/mouse[0]/button[2]</property>
								<not><property>/sim/mouse/right-button-mode-cycle-enabled</property></not>
							</and>
						</condition>
						<command>nasal</command>
						<script>mirage2000.fovZoom(-1);</script>
					</binding>
				</button>
				<button n="4">
					<binding n="0">
						<script></script>
					</binding>
					<binding n="1">
						<condition>
							<and>
								<property>/devices/status/mice/mouse[0]/button[2]</property>
								<not><property>/sim/mouse/right-button-mode-cycle-enabled</property></not>
							</and>
						</condition>
						<command>nasal</command>
						<script>mirage2000.fovZoom(1);</script>
					</binding>
				</button>
			</mode>
		</mouse>
	</mice>

	<keyboard>

		<key n="125">
			<name>}</name>
			<desc>Engine Autostart</desc>
			<binding>
				<command>nasal</command>
				<script>mirage2000.autostart();</script>
			</binding>
		</key>

		<key n="68">
			<name>D</name>
			<desc>Backseat canopy</desc>
			<binding>
				<command>nasal</command>
				<script>doors.passenger.toggle();</script>
			</binding>
		</key>

		<key n="100">
			<name>d</name>
			<desc>Pilot canopy</desc>
			<binding>
				<command>nasal</command>
				<script>doors.move_canopy();</script>
			</binding>
		</key>

		<key n="106">
			<name>j</name>
			<desc>Retract airbrakes</desc>
			<binding>
				<command>property-assign</command>
				<property>/controls/flight/speedbrake</property>
				<value>0</value>
			</binding>
		</key>

		<key n="107">
			<name>k</name>
			<desc>Extend airbrakes</desc>
			<binding>
				<command>property-assign</command>
				<property>/controls/flight/speedbrake</property>
				<value>1</value>
			</binding>
		</key>

		<key n="111">
			<name>o</name>
			<desc>Deploy or release the brake parachute</desc>
			<binding>
				<condition>
					<property>/gear/gear[1]/wow</property>
					<property>/gear/gear[2]/wow</property>
				</condition>
				<command>nasal</command>
				<script>
					controls.deployChute(1);
				</script>
			</binding>
		</key>

		<key n="5">
			<name>Ctrl-e</name>
			<desc>Pilot ejection</desc>
			<repeatable type="bool">false</repeatable>
			<binding>
				<command>nasal</command>
				<script>
					mirage2000.ejection();
				</script>
			</binding>
		</key>

		<key n="89">
			<name>Y</name>
			<desc>Radar antenna level</desc>
			<binding>
				<command>property-assign</command>
				<property>controls/radar/antennae-knob</property>
				<value>0</value>
			</binding>
			<binding>
				<command>nasal</command>
				<script>screen.log.write(sprintf("Antennae knob at %+d degrees",getprop("controls/radar/antennae-knob")*60));</script>
			</binding>
		</key>
		<key n="105">
			<name>i</name>
			<desc>Radar antenna up</desc>
			<binding>
				<command>property-adjust</command>
				<property>controls/radar/antennae-knob</property>
				<step>0.025</step>
				<min>-1</min>
				<max>1</max>
				<wrap>false</wrap>
			</binding>
			<binding>
				<command>nasal</command>
				<script>screen.log.write(sprintf("Antennae knob at %+.1f degrees",getprop("controls/radar/antennae-knob")*60));</script>
			</binding>
		</key>
		<key n="73">
			<name>I</name>
			<desc>Radar antenna down</desc>
			<binding>
				<command>property-adjust</command>
				<property>controls/radar/antennae-knob</property>
				<step>-0.025</step>
				<min>-1</min>
				<max>1</max>
				<wrap>false</wrap>
			</binding>
			<binding>
				<command>nasal</command>
				<script>screen.log.write(sprintf("Antennae knob at %+.1f degrees",getprop("controls/radar/antennae-knob")*60));</script>
			</binding>
		</key>

		<key n="82">
			<name>R</name>
			<desc>Increase radar range</desc>
			<binding>
				<command>nasal</command>
				<script>radar_system.apg68Radar.increaseRange();</script>
			</binding>
		</key>

		<key n="69">
			<name>E</name>
			<desc>Decrease radar range</desc>
			<binding>
				<command>nasal</command>
				<script>radar_system.apg68Radar.decreaseRange();</script>
			</binding>
		</key>

		<key n="81">
			<name>Q</name>
			<desc>Cycle radar root modes</desc>
			<binding>
				<command>nasal</command>
				<script>radar_system.apg68Radar.cycleRootMode();</script>
			</binding>
		</key>

		<key n="17">
			<name>Ctrl-q</name>
			<desc>Cycle radar mode within root mode</desc>
			<binding>
				<command>nasal</command>
				<script>radar_system.apg68Radar.cycleMode();</script>
			</binding>
		</key>

		<key n="121">
			<name>y</name>
			<desc>Next TWS target select</desc>
			<binding>
				<command>nasal</command>
				<script>radar_system.apg68Radar.cycleDesignate();</script>
			</binding>
		</key>

		<key n="25">
			<name>ctrl-y</name>
			<desc>Target deselect</desc>
			<binding>
				<command>nasal</command>
				<script>radar_system.apg68Radar.undesignate();</script>
			</binding>
		</key>

		<key n="72">
			<name>H</name>
			<desc>Active target seeking</desc>
			<binding>
				<command>nasal</command>
				<script>hud.activate_borsight()</script>
			</binding>
		</key>

		<key n="119">
			<name>w</name>
			<desc>Cycle stick weapon mode selector</desc>
			<binding>
				<command>nasal</command>
				<script>
					pylons.fcs.cycleLoadedWeapon();
					setprop("/controls/armament/name", pylons.fcs.getSelectedType());
				</script>
			</binding>
		</key>

		<key n="87">
			<name>W</name>
			<desc>Designate sniped target as target</desc>
			<binding>
				<command>nasal</command>
				<script>
					groundTargeting.designateSnipedTarget();
				</script>
			</binding>
		</key>

		<key n="23">
			<name>ctrl-w</name>
			<desc>Cycle Drop Mode CCRP/CCIP</desc>
			<binding>
				<command>nasal</command>
				<script>
					var mode = pylons.fcs.getDropMode();
					if (mode == 0) {
						pylons.fcs.setDropMode(1);
					} else {
						pylons.fcs.setDropMode(0);
					}
				</script>
			</binding>
		</key>

		<key n="109">
			<name>m</name>
			<desc>Toggle master arm switch</desc>
			<binding>
				<command>property-toggle</command>
				<property>controls/armament/master-arm</property>
			</binding>
			<binding>
				<command>nasal</command>
				<script>
					screen.log.write("Master-arm "~(getprop("controls/armament/master-arm")==0?"OFF":"ON"), 0.5, 0.5, 1);
					mirage2000.call_flightmode("m");
				</script>
			</binding>
		</key>

		<key n="77">
			<name>M</name>
			<desc>Toggle target designation mode (Radar, Laser, GPS)</desc>
			<binding>
				<command>nasal</command>
				<script>
					groundTargeting.toggleTargetDesignationMode();
				</script>
			</binding>
		</key>

		<key n="101">
			<name>e</name>
			<desc>Trigger for guns/missiles</desc>
			<binding>
				<command>property-assign</command>
				<property>controls/armament/trigger</property>
				<value>1</value>
			</binding>
			<mod-up>
				<binding>
					<command>property-assign</command>
					<property>controls/armament/trigger</property>
					<value>0</value>
				</binding>
			</mod-up>
		</key>

		<key n="113">
			<name>q</name>
			<desc>Flares out</desc>
			<binding>
				<command>property-toggle</command>
				<property>controls/switches/flares</property>
			</binding>
		</key>

		<!-- Landing light switch -->
		<key n="76">
			<name>L</name>
			<desc>Toggle landing lights</desc>
			<binding>
				<command>property-toggle</command>
				<property>/controls/lighting/landing-lights</property>
				<value>0</value>
				<value>1</value>
			</binding>
		</key>

		<key n="112">
			<name>p</name>
			<desc>Toggle the pause state of the sim</desc>
			<binding>
				<command>nasal</command>
				<script>
					if (getprop("payload/armament/msg")) {
						screen.log.write("Please do not pause while in combat over MP!");
					} else {
						setprop("/sim/freeze/master", !getprop("/sim/freeze/master"));
						setprop("/sim/freeze/clock", !getprop("/sim/freeze/clock"));
						screen.log.write("Sim is paused");
					}
				</script>
			</binding>
		</key>

		<!-- This allow us to use a little tricks to send back slats in initial position -->
		<key n="71">
			<name>G</name>
			<desc>Gear down</desc>
			<binding>
				<command>nasal</command>
				<script>
					controls.gearUp(0);
					mirage2000.call_flightmode("G");
				</script>
			</binding>
		</key>

		<key n="103">
			<name>g</name>
			<desc>Gear up</desc>
			<binding>
				<command>nasal</command>
				<script>
					controls.gearUp(1);
				</script>
			</binding>
		</key>

		<key n="262">
			<name>F6</name>
			<desc>Enable automatic tracking by FLIR camera</desc>
			<binding>
				<condition>
					<property>/aircraft/flir/target/view-enabled</property>
				</condition>
				<command>property-toggle</command>
				<property>/aircraft/flir/locks/auto-track</property>
			</binding>
			<binding>
				<condition>
					<not><property>/aircraft/flir/target/view-enabled</property></not>
				</condition>
				<command>property-assign</command>
				<property>/instrumentation/gci/picture</property>
				<value>1</value>
			</binding>
		</key>


		<key n="261">
			<name>F5</name>
			<repeatable type="bool">true</repeatable>
			<mod-shift>
				<desc>Reload autopilot configuration</desc>
				<binding>
					<command>nasal</command>
					<script>
						fgcommand('reinit', props.Node.new({ subsystem: "xml-autopilot" }));
						print("xml-autopilot reinitialized!");
					</script>
				</binding>
			</mod-shift>
		</key>

		<key n="24">
			<name>Ctrl-x</name>
			<desc>Reset zoom to default</desc>
			<binding>
				<command>nasal</command>
				<script>mirage2000.fovZoom(0);</script>
			</binding>
		</key>

		<key n="88">
			<name>X</name>
			<desc>Increase field of view</desc>
			<repeatable type="bool">true</repeatable>
			<binding>
				<command>nasal</command>
				<script>mirage2000.fovZoom(1);</script>
			</binding>
		</key>

		<key n="120">
			<name>x</name>
			<desc>Decrease field of view</desc>
			<repeatable type="bool">true</repeatable>
			<binding>
				<command>nasal</command>
				<script>mirage2000.fovZoom(-1);</script>
			</binding>
		</key>

		<key n="21">
			<name>Ctrl-U</name>
			<desc>[Cheat] Add 1000ft of emergency altitude</desc>
			<binding>
				<command>nasal</command>
				<script>
					if (getprop("payload/armament/msg")==1) {
						screen.log.write("CTRL-U disabled at the moment.");
					} else {
						setprop("position/altitude-ft", getprop("position/altitude-ft")+1000);
						setprop("sim/startup/onground", 0);
					}
				</script>
			</binding>
		</key>

		<key n="97">
			<name>a</name>
			<desc>Increase speed-up</desc>
			<binding>
				<command>nasal</command>
				<script>
					if (getprop("payload/armament/msg")==1) {
						screen.log.write("Speed-up disabled at the moment.");
					} else {
						controls.speedup(1);
					}
				</script>
			</binding>
		</key>

		<key n="65">
			<name>A</name>
			<desc>Decrease speed-up</desc>
			<binding>
				<command>nasal</command>
				<script>
					if (getprop("payload/armament/msg")==1) {
						screen.log.write("Speed-down disabled at the moment.");
					} else {
						controls.speedup(-1);
					}
				</script>
			</binding>
		</key>

		<key n="18">
			<name>Ctrl-R</name>
			<desc>Activate the instant replay system</desc>
			<binding>
				<command>nasal</command>
				<script>
					if (getprop("payload/armament/msg")==1) {
					screen.log.write("Please do not use replay while in combat over MP!");
					call(func{fgcommand('dialog-close', props.Node.new({"dialog-name": "replay"}))},nil,var err2 = []);
					} else {
					call(func{fgcommand('replay', props.Node.new({}))},nil,var err2 = []);
					call(func{fgcommand('dialog-show', props.Node.new({"dialog-name": "replay"}))},nil,var err2 = []);
					}
				</script>
			</binding>
			<mod-up>
			</mod-up>
		</key>

		<key n="263">
			<name>F7</name>
			<desc>Request Bogey Dope</desc>
			<repeatable type="bool">true</repeatable>
			<binding>
				<command>property-assign</command>
				<property>/instrumentation/gci/bogeydope</property>
				<value>1</value>
			</binding>
		</key>

		<key n="264">
			<name>F8</name>
			<desc>Request Cutoff</desc>
			<repeatable type="bool">true</repeatable>
			<binding>
				<command>property-assign</command>
				<property>/instrumentation/gci/cutoff</property>
				<value>1</value>
			</binding>
		</key>

		<key n="74">
			<name>J</name>
			<desc>Jettison fuel tanks</desc>
			<binding>
				<command>nasal</command>
				<script>pylons.fcs.jettisonFuel()</script>
			</binding>
		</key>

		<!-- Cursor bindings -->
		<key n="356">
			<name>Left</name>
			<repeatable type="bool">false</repeatable>
			<desc>slew</desc>
			<binding>
				<command>property-assign</command>
				<property>controls/displays/cursor-slew-x</property>
				<value type="int">-1</value>
			</binding>
			<mod-up>
				<binding>
					<command>property-assign</command>
					<property>controls/displays/cursor-slew-x</property>
					<value type="int">0</value>
				</binding>
			</mod-up>
		</key>

		<key n="358">
			<name>Right</name>
			<repeatable type="bool">false</repeatable>
			<desc>slew</desc>
			<binding>
				<command>property-assign</command>
				<property>controls/displays/cursor-slew-x</property>
				<value type="int">1</value>
			</binding>
			<mod-up>
				<binding>
					<command>property-assign</command>
					<property>controls/displays/cursor-slew-x</property>
					<value type="int">0</value>
				</binding>
			</mod-up>
		</key>

		<key n="357">
			<name>Up</name>
			<repeatable type="bool">true</repeatable>
			<desc>slew</desc>
			<binding>
				<command>property-assign</command>
				<property>controls/displays/cursor-slew-y</property>
				<value type="int">-1</value>
			</binding>
			<mod-up>
				<binding>
					<command>property-assign</command>
					<property>controls/displays/cursor-slew-y</property>
					<value type="int">0</value>
				</binding>
			</mod-up>
		</key>

		<key n="359">
			<name>Down</name>
			<repeatable type="bool">true</repeatable>
			<desc>slew</desc>
			<binding>
				<command>property-assign</command>
				<property>controls/displays/cursor-slew-y</property>
				<value type="int">1</value>
			</binding>
			<mod-up>
				<binding>
					<command>property-assign</command>
					<property>controls/displays/cursor-slew-y</property>
					<value type="int">0</value>
				</binding>
			</mod-up>
		</key>

		<key n="108">
			<name>l</name>
			<desc>Cursor designate</desc>
			<binding>
				<command>property-assign</command>
				<property>controls/displays/cursor-click</property>
				<value type="bool">true</value>
			</binding>
			<mod-up>
				<binding>
					<command>property-assign</command>
					<property>controls/displays/cursor-click</property>
					<value type="bool">false</value>
				</binding>
			</mod-up>
		</key>

	</keyboard>

</PropertyList>
