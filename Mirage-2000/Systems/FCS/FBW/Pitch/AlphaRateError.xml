<?xml version="1.0" encoding="iso-8859-1"?>
<!-- 
	Authors: Axel Paccalin.
	Version: 0.1
	
	Algebraic system with a low-pass filter, computing an alpha-rate error from a g error.
	Three step process, involving: computing an error in alpha, then a demand in alpha-rate, then the associated error (compared to the current state).
-->

<system name="Mirage-2000: FCS/FBW">
	<property value=  "0.07"> fcs/fbw/pitch/alpha-rate/alpha-Kp </property>    <!-- Tuning param (gain to convert g-error error to alpha-error) -->

	<property value=  "0.5">  fcs/fbw/pitch/alpha-rate/ls-max </property>  <!-- Tuning param. -->
	<property value=  "2.0">  fcs/fbw/pitch/alpha-rate/hs-max </property>  <!-- Tuning param. -->

	<property value= "100.0">  fcs/fbw/pitch/alpha-rate/ls </property>  <!-- Tuning param (lowest point of the map).  -->
	<property value= "300.0">  fcs/fbw/pitch/alpha-rate/hs </property>  <!-- Tuning param (the point speed over which the airframe allows full reactivity). -->
	
	<property value= "200.0">       fcs/fbw/pitch/alpha-rate/alpha-Klag </property>  <!-- Tuning param (lag coefficient for the alpha-error) -->

	<channel name="Pitch">	
		<!-- Compute the error in alpha according to the error in lift coefficient -->
		<fcs_function name="fcs/fbw/pitch/alpha-rate/alpha-error">
			<function>
				<product>
					<p> -fcs/fbw/pitch/lift/k-error </p> 
					<p> fcs/fbw/pitch/alpha-rate/alpha-Kp </p>  <!-- Tunable proportional coefficient -->
				</product>
			</function>
			<clipto>
				<min> -0.52359877559 </min>
				<max>  0.52359877559 </max>
			</clipto>
		</fcs_function>

		<!-- Lag filter for the alpha error. -->
		<lag_filter name="fcs/fbw/pitch/alpha-rate/alpha-error-lag">
			<input> fcs/fbw/pitch/alpha-rate/alpha-error </input>
			<c1> fcs/fbw/pitch/alpha-rate/alpha-Klag </c1>
		</lag_filter>

		<!-- TODO: Remove, it is for tuning purposes only -->
		<summer name="fcs/fbw/pitch/alpha-rate/predicted-alpha">
			<input> fcs/fbw/pitch/alpha-rad </input>
			<input> -fcs/fbw/pitch/alpha-rate/alpha-error </input>
		</summer>

		<!-- Linear interpolation coefficient between low speed config and standard config. -->
		<fcs_function name="fcs/fbw/pitch/alpha-rate/li-ls-hs">
			<function>
				<ifthen>
					<le>
						<property> velocities/vc-kts </property>
						<p> fcs/fbw/roll/p-rate/ls </p>
					</le>

					<value>0</value>

					<ifthen>
						<ge>
							<property> velocities/vc-kts </property>
							<p> fcs/fbw/roll/p-rate/hs </p>
						</ge>

						<value> 1 </value>

						<quotient>
							<difference>
								<p> velocities/vc-kts </p>
								<p> fcs/fbw/roll/p-rate/ls </p>
							</difference>
							<difference>
								<p> fcs/fbw/roll/p-rate/hs </p>
								<p> fcs/fbw/roll/p-rate/ls </p>
							</difference>
						</quotient>
					</ifthen>

				</ifthen>
			</function>
		</fcs_function>

		<!-- Gain to convert alpha error to alpha-rate -->
		<fcs_function name="fcs/fbw/pitch/alpha-rate/rate-Kp">
			<function>
				<sum>
					<product>
						<p> fcs/fbw/pitch/alpha-rate/hs-max </p>
						<p> fcs/fbw/pitch/alpha-rate/li-ls-hs </p>
					</product>

					<product>
						<p> fcs/fbw/pitch/alpha-rate/ls-max</p>
						<difference>
							<value> 1 </value>
							<p> fcs/fbw/pitch/alpha-rate/li-ls-hs </p>
						</difference>
					</product>
				</sum>
			</function>
		</fcs_function>

		<!-- Compute the alpha rate required to correct the alpha error. -->
		<fcs_function name="fcs/fbw/pitch/alpha-rate/demand">
			<function>
				<product>
					<p> fcs/fbw/pitch/alpha-rate/alpha-error-lag </p>  <!-- The error in alpha  -->
					<p> fcs/fbw/pitch/alpha-rate/rate-Kp </p>          <!-- Tunable proportional coefficient -->
				</product>
			</function>
		</fcs_function>

		<!-- Error = alpha-rate_demand - alpha-rate_current. -->
		<summer name="fcs/fbw/pitch/alpha-rate/error">
			<input> fcs/fbw/pitch/alpha-rate/demand </input>
			<input> fcs/fbw/pitch/d-alpha </input>
		</summer>
	</channel>
</system>